#include <ros/ros.h>
#include <std_msgs/Float32MultiArray.h>
#include <sensor_msgs/Imu.h>

#include <iostream>
#include <stdio.h>

#include <Common/MS5611.h>
#include <Common/Util.h>
#include <unistd.h>
#include <stdio.h>

std_msgs::Float32MultiArray msg_temp;
std_msgs::Float32MultiArray msg_pres;

int main(int argc, char *argv[])
{
    MS5611 barometer;

    if (check_apm()) {
        return 1;
    }

 // declare node and loop rate at 10 Hz
    ros::init(argc, argv, "barometer_node");
    ROS_INFO("ros connected to pirov_barometer");
    ros::NodeHandle nh_("~");
    ros::Rate loop(10);

    barometer.initialize();


//Publishing
    ros::Publisher pub_temperature = nh_.advertise<std_msgs::Float32MultiArray>("temperature_topic", 1);
//Publishing
    ros::Publisher pub_pressure = nh_.advertise<std_msgs::Float32MultiArray>("pressure_topic", 1);

    while (ros::ok()) {
        barometer.refreshPressure();
        usleep(10000); // Waiting for pressure data ready
        barometer.readPressure();

        barometer.refreshTemperature();
        usleep(10000); // Waiting for temperature data ready
        barometer.readTemperature();

        barometer.calculatePressureAndTemperature();

        printf("Temperature(C): %f Pressure(millibar): %f\n",
                barometer.getTemperature(), barometer.getPressure());


        pub_temperature.publish(msg_temp); 
        pub_pressure.publish(msg_pres);       


        sleep(1);
    }

    return 0;
}

